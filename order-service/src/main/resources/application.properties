spring.application.name=order-service
server.port=8083

# PostgreSQL DB Config (if using the same DB or different DB, update accordingly)
spring.datasource.url=jdbc:postgresql://order-db:5432/orderdb
spring.datasource.username=postgres
spring.datasource.password=postroot

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Eureka (Eureka server configuration for registering the service)
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

spring.cloud.compatibility-verifier.enabled=false

# gRPC server configuration
grpc.server.port=9093
grpc.server.address=0.0.0.0
grpc.server.reflection.enabled=true

## gRPC Client Configuration
#grpc.client.product-service.address=static://product-service:9092
#grpc.client.product-service.negotiation-type=plaintext
#grpc.client.product-service.enable-keep-alive=true
#grpc.client.product-service.keep-alive-without-calls=true
#
#grpc.client.user-service.address=static://user-service:9091
#grpc.client.user-service.negotiation-type=plaintext
#grpc.client.user-service.enable-keep-alive=true
#grpc.client.user-service.keep-alive-without-calls=true


# Logging
logging.level.com.e_project.order_service=DEBUG
logging.level.net.devh.boot.grpc=DEBUG

## gRPC client configurations
#grpc.client.user-service.address=static://localhost:9091
#grpc.client.user-service.negotiationType=plaintext
#
#grpc.client.product-service.address=static://localhost:9092
#grpc.client.product-service.negotiationType=plaintext

